Traceback (most recent call last):
  File "/Users/akirakawai/Library/Python/3.8/lib/python/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Library/Python/3.8/site-packages/nbclient/client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Library/Python/3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Library/Python/3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Library/Python/3.8/site-packages/nbclient/client.py", line 559, in async_execute
    await self.async_execute_cell(
  File "/Library/Python/3.8/site-packages/nbclient/client.py", line 854, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Library/Python/3.8/site-packages/nbclient/client.py", line 756, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
img = cv2.imread('../src/lena.png', cv2.IMREAD_GRAYSCALE)
plt.imshow(img)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-2-240d71471520>[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0mimg[0m [0;34m=[0m [0mcv2[0m[0;34m.[0m[0mimread[0m[0;34m([0m[0;34m'../src/lena.png'[0m[0;34m,[0m [0mcv2[0m[0;34m.[0m[0mIMREAD_GRAYSCALE[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 2[0;31m [0mplt[0m[0;34m.[0m[0mimshow[0m[0;34m([0m[0mimg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m~/Library/Python/3.8/lib/python/site-packages/matplotlib/_api/deprecation.py[0m in [0;36mwrapper[0;34m(*args, **kwargs)[0m
[1;32m    457[0m                 [0;34m"parameter will become keyword-only %(removal)s."[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    458[0m                 name=name, obj_type=f"parameter of {func.__name__}()")
[0;32m--> 459[0;31m         [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    460[0m [0;34m[0m[0m
[1;32m    461[0m     [0;31m# Don't modify *func*'s signature, as boilerplate.py needs it.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Library/Python/3.8/lib/python/site-packages/matplotlib/pyplot.py[0m in [0;36mimshow[0;34m(X, cmap, norm, aspect, interpolation, alpha, vmin, vmax, origin, extent, interpolation_stage, filternorm, filterrad, resample, url, data, **kwargs)[0m
[1;32m   2650[0m         [0minterpolation_stage[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mfilternorm[0m[0;34m=[0m[0;32mTrue[0m[0;34m,[0m [0mfilterrad[0m[0;34m=[0m[0;36m4.0[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2651[0m         resample=None, url=None, data=None, **kwargs):
[0;32m-> 2652[0;31m     __ret = gca().imshow(
[0m[1;32m   2653[0m         [0mX[0m[0;34m,[0m [0mcmap[0m[0;34m=[0m[0mcmap[0m[0;34m,[0m [0mnorm[0m[0;34m=[0m[0mnorm[0m[0;34m,[0m [0maspect[0m[0;34m=[0m[0maspect[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2654[0m         [0minterpolation[0m[0;34m=[0m[0minterpolation[0m[0;34m,[0m [0malpha[0m[0;34m=[0m[0malpha[0m[0;34m,[0m [0mvmin[0m[0;34m=[0m[0mvmin[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Library/Python/3.8/lib/python/site-packages/matplotlib/_api/deprecation.py[0m in [0;36mwrapper[0;34m(*args, **kwargs)[0m
[1;32m    457[0m                 [0;34m"parameter will become keyword-only %(removal)s."[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    458[0m                 name=name, obj_type=f"parameter of {func.__name__}()")
[0;32m--> 459[0;31m         [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    460[0m [0;34m[0m[0m
[1;32m    461[0m     [0;31m# Don't modify *func*'s signature, as boilerplate.py needs it.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Library/Python/3.8/lib/python/site-packages/matplotlib/__init__.py[0m in [0;36minner[0;34m(ax, data, *args, **kwargs)[0m
[1;32m   1410[0m     [0;32mdef[0m [0minner[0m[0;34m([0m[0max[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1411[0m         [0;32mif[0m [0mdata[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1412[0;31m             [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0max[0m[0;34m,[0m [0;34m*[0m[0mmap[0m[0;34m([0m[0msanitize_sequence[0m[0;34m,[0m [0margs[0m[0;34m)[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1413[0m [0;34m[0m[0m
[1;32m   1414[0m         [0mbound[0m [0;34m=[0m [0mnew_sig[0m[0;34m.[0m[0mbind[0m[0;34m([0m[0max[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Library/Python/3.8/lib/python/site-packages/matplotlib/axes/_axes.py[0m in [0;36mimshow[0;34m(self, X, cmap, norm, aspect, interpolation, alpha, vmin, vmax, origin, extent, interpolation_stage, filternorm, filterrad, resample, url, **kwargs)[0m
[1;32m   5479[0m                               **kwargs)
[1;32m   5480[0m [0;34m[0m[0m
[0;32m-> 5481[0;31m         [0mim[0m[0;34m.[0m[0mset_data[0m[0;34m([0m[0mX[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   5482[0m         [0mim[0m[0;34m.[0m[0mset_alpha[0m[0;34m([0m[0malpha[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   5483[0m         [0;32mif[0m [0mim[0m[0;34m.[0m[0mget_clip_path[0m[0;34m([0m[0;34m)[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Library/Python/3.8/lib/python/site-packages/matplotlib/image.py[0m in [0;36mset_data[0;34m(self, A)[0m
[1;32m    704[0m         if (self._A.dtype != np.uint8 and
[1;32m    705[0m                 not np.can_cast(self._A.dtype, float, "same_kind")):
[0;32m--> 706[0;31m             raise TypeError("Image data of dtype {} cannot be converted to "
[0m[1;32m    707[0m                             "float".format(self._A.dtype))
[1;32m    708[0m [0;34m[0m[0m

[0;31mTypeError[0m: Image data of dtype object cannot be converted to float
TypeError: Image data of dtype object cannot be converted to float

